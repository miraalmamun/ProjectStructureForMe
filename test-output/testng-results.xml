<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="35" total="46" passed="8">
  <reporter-output>
    <line>
      <![CDATA[Starting test ->testA2_1]]>
    </line>
    <line>
      <![CDATA[Title does not match]]>
    </line>
    <line>
      <![CDATA[one line of code here]]>
    </line>
    <line>
      <![CDATA[one line of code here]]>
    </line>
    <line>
      <![CDATA[one line of code here]]>
    </line>
    <line>
      <![CDATA[one line of code here]]>
    </line>
    <line>
      <![CDATA[Expected value and Actual value same]]>
    </line>
    <line>
      <![CDATA[Test Failed :->testA2_1]]>
    </line>
    <line>
      <![CDATA[Failed Cause-->The following asserts failed:
Title does not match]]>
    </line>
    <line>
      <![CDATA[Starting test ->testA2_2]]>
    </line>
    <line>
      <![CDATA[one line of code here]]>
    </line>
    <line>
      <![CDATA[one line of code here]]>
    </line>
    <line>
      <![CDATA[one line of code here]]>
    </line>
    <line>
      <![CDATA[one line of code here]]>
    </line>
    <line>
      <![CDATA[This is a critical error]]>
    </line>
    <line>
      <![CDATA[Test Failed :->testA2_2]]>
    </line>
    <line>
      <![CDATA[Failed Cause-->The following asserts failed:
This is a critical error]]>
    </line>
    <line>
      <![CDATA[Starting test ->testA2_5]]>
    </line>
    <line>
      <![CDATA[Browser: chrome / number: 1]]>
    </line>
    <line>
      <![CDATA[Test success :->testA2_5]]>
    </line>
    <line>
      <![CDATA[Starting test ->testA2_5]]>
    </line>
    <line>
      <![CDATA[Browser: ie / number: 2]]>
    </line>
    <line>
      <![CDATA[Test success :->testA2_5]]>
    </line>
    <line>
      <![CDATA[Starting test ->testA2_6]]>
    </line>
    <line>
      <![CDATA[----testA2_6 in method----]]>
    </line>
    <line>
      <![CDATA[Test Failed :->testA2_6]]>
    </line>
    <line>
      <![CDATA[Failed Cause-->Forced to fail]]>
    </line>
    <line>
      <![CDATA[Starting test ->testA3_1]]>
    </line>
    <line>
      <![CDATA[Test success :->testA3_1]]>
    </line>
    <line>
      <![CDATA[Starting test ->testA3_2]]>
    </line>
    <line>
      <![CDATA[Test success :->testA3_2]]>
    </line>
    <line>
      <![CDATA[Starting test ->testA3_3]]>
    </line>
    <line>
      <![CDATA[Test success :->testA3_3]]>
    </line>
    <line>
      <![CDATA[Starting test ->testA3_4]]>
    </line>
    <line>
      <![CDATA[Test success :->testA3_4]]>
    </line>
    <line>
      <![CDATA[Starting test ->testA3_5]]>
    </line>
    <line>
      <![CDATA[Test success :->testA3_5]]>
    </line>
    <line>
      <![CDATA[Starting test ->testA3_6]]>
    </line>
    <line>
      <![CDATA[Test success :->testA3_6]]>
    </line>
  </reporter-output>
  <suite name="CustomerAccount" duration-ms="1290" started-at="2020-07-30T23:33:06Z" finished-at="2020-07-30T23:33:07Z">
    <groups>
      <group name="browserGroup1">
        <method signature="TestA2.testA2_1()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_1" class="suiteA.TestA2"/>
        <method signature="TestA2.testA2_6()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_6" class="suiteA.TestA2"/>
        <method signature="TestA3.testA3_2()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_2" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_3()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_3" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_4()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_4" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_5()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_5" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_6()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_6" class="suiteA.TestA3"/>
      </group> <!-- browserGroup1 -->
      <group name="browserGroup2">
        <method signature="TestA2.testA2_2()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_2" class="suiteA.TestA2"/>
        <method signature="TestA2.testA2_5(java.lang.String, int)[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_5" class="suiteA.TestA2"/>
        <method signature="TestA3.testA3_1()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_1" class="suiteA.TestA3"/>
      </group> <!-- browserGroup2 -->
      <group name="smoke">
        <method signature="TestA2.testA2_1()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_1" class="suiteA.TestA2"/>
        <method signature="TestA2.testA2_2()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_2" class="suiteA.TestA2"/>
        <method signature="TestA2.testA2_5(java.lang.String, int)[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_5" class="suiteA.TestA2"/>
        <method signature="TestA2.testA2_6()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_6" class="suiteA.TestA2"/>
        <method signature="TestA3.testA3_1()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_1" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_2()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_2" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_3()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_3" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_4()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_4" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_5()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_5" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_6()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_6" class="suiteA.TestA3"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="TestA2.testA2_1()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_1" class="suiteA.TestA2"/>
        <method signature="TestA2.testA2_5(java.lang.String, int)[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_5" class="suiteA.TestA2"/>
        <method signature="TestA3.testA3_1()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_1" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_2()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_2" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_3()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_3" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_4()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_4" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_5()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_5" class="suiteA.TestA3"/>
        <method signature="TestA3.testA3_6()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_6" class="suiteA.TestA3"/>
      </group> <!-- sanity -->
    </groups>
    <test name="TestA2-3" duration-ms="1199" started-at="2020-07-30T23:33:06Z" finished-at="2020-07-30T23:33:07Z">
      <class name="suiteA.TestA2">
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="beforeMethod" is-config="true" duration-ms="256" started-at="2020-07-30T23:33:06Z" finished-at="2020-07-30T23:33:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA2_1 status=FAILURE method=TestA2.testA2_1()[pri:0, instance:suiteA.TestA2@4bec1f0c] output=Starting test ->testA2_1]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testA2_1()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_1" duration-ms="17" started-at="2020-07-30T23:33:06Z" finished-at="2020-07-30T23:33:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Title does not match]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Title does not match
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at suiteA.TestA2.testA2_1(TestA2.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA2_1]]>
            </line>
            <line>
              <![CDATA[Title does not match]]>
            </line>
            <line>
              <![CDATA[one line of code here]]>
            </line>
            <line>
              <![CDATA[one line of code here]]>
            </line>
            <line>
              <![CDATA[one line of code here]]>
            </line>
            <line>
              <![CDATA[one line of code here]]>
            </line>
            <line>
              <![CDATA[Expected value and Actual value same]]>
            </line>
            <line>
              <![CDATA[Test Failed :->testA2_1]]>
            </line>
            <line>
              <![CDATA[Failed Cause-->The following asserts failed:
Title does not match]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA2_1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="afterMethod" is-config="true" duration-ms="500" started-at="2020-07-30T23:33:06Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA2_2 status=FAILURE method=TestA2.testA2_2()[pri:0, instance:suiteA.TestA2@4bec1f0c] output=Starting test ->testA2_2]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testA2_2()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_2" duration-ms="3" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
This is a critical error]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
This is a critical error
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at testbase.TestBase2.failAndStopTest(TestBase2.java:160)
at suiteA.TestA2.testA2_2(TestA2.java:46)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA2_2]]>
            </line>
            <line>
              <![CDATA[one line of code here]]>
            </line>
            <line>
              <![CDATA[one line of code here]]>
            </line>
            <line>
              <![CDATA[one line of code here]]>
            </line>
            <line>
              <![CDATA[one line of code here]]>
            </line>
            <line>
              <![CDATA[This is a critical error]]>
            </line>
            <line>
              <![CDATA[Test Failed :->testA2_2]]>
            </line>
            <line>
              <![CDATA[Failed Cause-->The following asserts failed:
This is a critical error]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA2_2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="afterMethod" is-config="true" duration-ms="23" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA2_5 status=SUCCESS method=TestA2.testA2_5(java.lang.String, int)[pri:0, instance:suiteA.TestA2@4bec1f0c] output=Starting test ->testA2_5]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testA2_5(java.lang.String, int)[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_5" duration-ms="4" started-at="2020-07-30T23:33:07Z" data-provider="TestA2" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA2_5]]>
            </line>
            <line>
              <![CDATA[Browser: chrome / number: 1]]>
            </line>
            <line>
              <![CDATA[Test success :->testA2_5]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA2_5 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="afterMethod" is-config="true" duration-ms="24" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA2_5 status=SUCCESS method=TestA2.testA2_5(java.lang.String, int)[pri:0, instance:suiteA.TestA2@4bec1f0c] output=Starting test ->testA2_5]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testA2_5(java.lang.String, int)[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_5" duration-ms="3" started-at="2020-07-30T23:33:07Z" data-provider="TestA2" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA2_5]]>
            </line>
            <line>
              <![CDATA[Browser: ie / number: 2]]>
            </line>
            <line>
              <![CDATA[Test success :->testA2_5]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA2_5 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="afterMethod" is-config="true" duration-ms="11" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA2_6 status=FAILURE method=TestA2.testA2_6()[pri:0, instance:suiteA.TestA2@4bec1f0c] output=Starting test ->testA2_6]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="testA2_6()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="testA2_6" duration-ms="2" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Forced to fail]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Forced to fail
at org.testng.Assert.fail(Assert.java:96)
at suiteA.TestA2.testA2_6(TestA2.java:86)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA2_6]]>
            </line>
            <line>
              <![CDATA[----testA2_6 in method----]]>
            </line>
            <line>
              <![CDATA[Test Failed :->testA2_6]]>
            </line>
            <line>
              <![CDATA[Failed Cause-->Forced to fail]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA2_6 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA2@4bec1f0c]" name="afterMethod" is-config="true" duration-ms="17" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- suiteA.TestA2 -->
      <class name="suiteA.TestA3">
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA3@29ca901e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA3_1 status=SUCCESS method=TestA3.testA3_1()[pri:0, instance:suiteA.TestA3@29ca901e] output=Starting test ->testA3_1]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testA3_1()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_1" duration-ms="2" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA3_1]]>
            </line>
            <line>
              <![CDATA[Test success :->testA3_1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA3_1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA3@29ca901e]" name="afterMethod" is-config="true" duration-ms="80" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA3@29ca901e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA3_2 status=SUCCESS method=TestA3.testA3_2()[pri:0, instance:suiteA.TestA3@29ca901e] output=Starting test ->testA3_2]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testA3_2()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_2" duration-ms="2" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA3_2]]>
            </line>
            <line>
              <![CDATA[Test success :->testA3_2]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA3_2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA3@29ca901e]" name="afterMethod" is-config="true" duration-ms="13" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA3@29ca901e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA3_3 status=SUCCESS method=TestA3.testA3_3()[pri:0, instance:suiteA.TestA3@29ca901e] output=Starting test ->testA3_3]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testA3_3()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_3" duration-ms="2" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA3_3]]>
            </line>
            <line>
              <![CDATA[Test success :->testA3_3]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA3_3 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA3@29ca901e]" name="afterMethod" is-config="true" duration-ms="23" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA3@29ca901e]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA3_4 status=SUCCESS method=TestA3.testA3_4()[pri:0, instance:suiteA.TestA3@29ca901e] output=Starting test ->testA3_4]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testA3_4()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_4" duration-ms="5" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA3_4]]>
            </line>
            <line>
              <![CDATA[Test success :->testA3_4]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA3_4 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA3@29ca901e]" name="afterMethod" is-config="true" duration-ms="28" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA3@29ca901e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA3_5 status=SUCCESS method=TestA3.testA3_5()[pri:0, instance:suiteA.TestA3@29ca901e] output=Starting test ->testA3_5]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testA3_5()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_5" duration-ms="3" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA3_5]]>
            </line>
            <line>
              <![CDATA[Test success :->testA3_5]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA3_5 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA3@29ca901e]" name="afterMethod" is-config="true" duration-ms="44" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(org.testng.ITestResult, org.testng.ITestContext)[pri:0, instance:suiteA.TestA3@29ca901e]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testA3_6 status=SUCCESS method=TestA3.testA3_6()[pri:0, instance:suiteA.TestA3@29ca901e] output=Starting test ->testA3_6]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@fa49800]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="testA3_6()[pri:0, instance:suiteA.TestA3@29ca901e]" name="testA3_6" duration-ms="3" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
            <line>
              <![CDATA[Starting test ->testA3_6]]>
            </line>
            <line>
              <![CDATA[Test success :->testA3_6]]>
            </line>
          </reporter-output>
        </test-method> <!-- testA3_6 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:suiteA.TestA3@29ca901e]" name="afterMethod" is-config="true" duration-ms="25" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- suiteA.TestA3 -->
    </test> <!-- TestA2-3 -->
    <test name="TestA4-5" duration-ms="2" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
    </test> <!-- TestA4-5 -->
    <test name="TestAA2-3" duration-ms="1" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
    </test> <!-- TestAA2-3 -->
    <test name="TestAA4-5" duration-ms="1" started-at="2020-07-30T23:33:07Z" finished-at="2020-07-30T23:33:07Z">
    </test> <!-- TestAA4-5 -->
  </suite> <!-- CustomerAccount -->
</testng-results>
